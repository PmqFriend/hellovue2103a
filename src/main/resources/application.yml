server:
  port: 8080
spring:
  thymeleaf:
    cache: false  #thymeleaf缓存  false 不进行缓存
  application:
    name: user-client # 应用名称

    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
  #重试机制
  cloud:
    loadbalancer:
      retry:
        enabled: true # 开启Spring Cloud的重试功能
eureka:
  client:

    registry-fetch-interval-seconds: 5

    service-url: # EurekaServer地址
      defaultZone: http://127.0.0.1:10086/eureka,http://127.0.0.1:10087/eureka
  instance:
    prefer-ip-address: true # 当其它服务获取地址时提供ip而不是hostname
    ip-address: 127.0.0.1 # 指定自己的ip信息，不指定的话会自己寻找

#重试机制，用feign和不用feign都用此配置
user-server:
  ribbon:
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule  #修改ribbon的负载均衡策略 为随机，不是默认的轮询
    ConnectTimeout: 250 # Ribbon的连接超时时间
    ReadTimeout: 1000 # Ribbon的数据读取超时时间
    OkToRetryOnAllOperations: true # 是否对所有操作都进行重试
    MaxAutoRetriesNextServer: 1 # 切换实例的重试次数
    MaxAutoRetries: 1 # 对当前实例的重试次数
#熔断时间配置  原始方式，不用feign，接口用feign配置后，此配置无效
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 6000 # 设置hystrix的超时时间为10000ms   #默认1000
#        timeout:
#          enabled: true                    # 必须设置true，否则会交给ribbon
#    serverMethod:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 6000   #配置具体方法的超时时间
#feign熔断配置，fallback要通过实现UserFeignClient接口
feign:
  compression:
    request:
      enabled: true # 开启请求压缩
      mime-types: text/html,application/xml,application/json # 设置压缩的数据类型
      min-request-size: 2048 # 设置触发压缩的大小下限
    response:
      enabled: true # 开启响应压缩

  hystrix:
    enabled: true  # 开启Feign的熔断功能

    command:
      default:
        execution:
          isolation:
            thread:
              timeoutInMilliseconds: 3000 # 设置hystrix的超时时间为10000ms   #默认1000
          timeout:
            enabled: true                    # 必须设置true，否则会交给ribbon
      serverMethod:
        execution:
          isolation:
            thread:
              timeoutInMilliseconds: 3000   #配置具体方法的超时时间
logging:
  level:
    cn.ty: debug
